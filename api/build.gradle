group "ru.salix.ejournal"
version "0.1.3"

buildscript {
    ext {
        springBootVersion = "2.1.0.RELEASE"
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        )
    }
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

ext {
    postgresqlVersion = "42.2.5"
    jaxbApiVersion = "2.3.1"
}

dependencies {
    implementation project(":db")

    implementation(
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",

            "org.postgresql:postgresql:$postgresqlVersion",

            "org.liquibase:liquibase-core",

            "org.projectlombok:lombok",
            "org.hibernate:hibernate-jpamodelgen"
    )
    annotationProcessor(
            "javax.xml.bind:jaxb-api:$jaxbApiVersion",
            "org.projectlombok:lombok",
            "org.hibernate:hibernate-jpamodelgen"
    )

    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

compileJava {
    def relativePath = "out/production/classes/generated"
    sourceSets.main.java { 
        srcDir(relativePath) 
    }
    def generatedSourceDir = project.file(relativePath)
    println "Creating and configuring generated source directory $generatedSourceDir"
    project.mkdir(generatedSourceDir)
    options.annotationProcessorGeneratedSourcesDirectory = generatedSourceDir
    outputs.dir(generatedSourceDir)

    doFirst {
        project.delete(generatedSourceDir)
        project.mkdir(generatedSourceDir)
    }
}

//deprecated. но это работает!
//tasks.withType(JavaCompile) {
//    doFirst {
//        effectiveAnnotationProcessorPath.each { maybeJar ->
//            if (maybeJar.file) {
//                println "Doing: " + maybeJar.name
//                zipTree(maybeJar).matching {
//                    include 'META-INF/services/javax.annotation.processing.Processor'
//                } each {
//                    processorConfigFile ->
//                        println "Annotation processor(s) found in $maybeJar.name:"
//                        println processorConfigFile.filterLine { it =~ /^(?!#)/ }
//                }
//            }
//        }
//    }
//}
